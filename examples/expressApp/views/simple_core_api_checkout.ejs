<html>

<head>
  <title>Checkout</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/featherlight/1.7.12/featherlight.min.css">
</head>

<body>
  <script type="text/javascript" src="https://api.sandbox.midtrans.com/v2/assets/js/midtrans.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/featherlight/1.7.12/featherlight.min.js"></script>

  <h1>Checkout</h1>
  <form action="#" method="POST" id="payment-form">
    <fieldset>
      <legend>Checkout</legend>
      <small><strong>Field that may be presented to customer:</strong></small>
      <p>
        <label>Card Number</label>
        <input class="card-number" value="4811 1111 1111 1114" size="23" type="text" autocomplete="off" />
      </p>
      <p>
        <label>Expiration (MM/YYYY)</label>
        <input class="card-expiry-month" value="12" placeholder="MM" size="2" type="text" />
        <span> / </span>
        <input class="card-expiry-year" value="2020" placeholder="YYYY" size="4" type="text" />
      </p>
      <p>
        <label>CVV</label>
        <input class="card-cvv" value="123" size="4" type="password" autocomplete="off" />
      </p>

      <small><strong>Fields that shouldn't be presented to the customer:</strong></small>
      <p>
        <label>3D Secure</label>
        <input class="authenticate_3ds" type="checkbox" name="authenticate_3ds" value="true" checked>
      </p>

      <input id="token_id" name="token_id" type="hidden" />
      <button class="submit-button" type="submit">Submit Payment</button>
    </fieldset>
  </form>

  <code>
    Transaction Result:
    <pre id="result"> Awaiting transactions... </pre>
    Transaction verified status result:
    <pre id="status-result"> Awaiting transactions... </pre>
    <pre>
  <b>Testing cards:</b>

    <b>For 3D Secure:</b>
    Visa success              4811 1111 1111 1114
    Visa deny by bank         4711 1111 1111 1115
    Visa deny by FDS          4611 1111 1111 1116

    MasterCard success        5211 1111 1111 1117
    MasterCard deny by bank   5111 1111 1111 1118
    MasterCard deny by FDS    5411 1111 1111 1115

    Challenge by FDS          4511 1111 1111 1117 
    </pre>
  </code>

  <!-- Javascript for token generation -->
  <script type="text/javascript">
      // Set as sandbox URL, remove this line for Production mode.
      Veritrans.url = "https://api.sandbox.midtrans.com/v2/token";
      // TODO: Change with your client key.
      Veritrans.client_key = "<%= clientKey %>";
      var getCardData = function () {
        return {
          "card_number": $(".card-number").val(),
          "card_exp_month": $(".card-expiry-month").val(),
          "card_exp_year": $(".card-expiry-year").val(),
          "card_cvv": $(".card-cvv").val(),
        }
      };

      // On Submit button clicked
      $(".submit-button").click(function (event) {
        console.log("SUBMIT button clicked");
        // [1] Use card data to get card token on the callback
        Veritrans.token(getCardData, callbackCardToken);

        event.preventDefault(); return false;
      });

      function callbackCardToken(response) {
        // Card Token callback triggered when `Veritrans.token` completed.
        console.log("Get token response:",response);
        if (response.status_code == "200") {
          // success to get card token
          // [2] Send AJAX to let backend charge the card using the card token_id
          fetch("/charge_core_api_ajax", {
            method : "POST",
            body: JSON.stringify({ 
              "token_id" : response.token_id,
              "authenticate_3ds" : $('.authenticate_3ds')[0].checked
            }),
            headers: {'Content-Type': 'application/json'},
          })
          .then(function(response) { return response.json(); })
          .then(function(responseObj) {
            console.log("Charge response:",responseObj);
            if (responseObj.status_code == "201"){
              // [3.1] Transaction need 3DS authentication
              Veritrans.authenticate(responseObj.redirect_url, callback3dsAuthentication);
            } else {
              // Transaction do not need 3DS Authentication, transaction is complete with result
              transactionComplete(responseObj);
            }
          })
        }
        else {
          // fail to get card token
          transactionComplete(responseObj);
        }
      }

      function callback3dsAuthentication(response){
        console.log('callback3dsAuthentication triggered with param:',response);
        if (response.redirect_url){
          // [3.2] 3ds authentication redirect_url received, open iframe to display to customer
          openPopup(response.redirect_url);
        } 
        else if (response.status_code){
          // [3.3] 3DS authentication result received, which is also transaction result
          transactionComplete(response);
        } 
        else {
          // handle exceptional case
        }
      }

      function transactionComplete(responseObj){
        // Close 3DS popup, then display the result (for example)
        console.log("transactionComplete with status: ",responseObj);
        closePopup();

        document.getElementById("result").innerText = JSON.stringify(responseObj, null, 2);
        document.getElementById("result").scrollIntoView();
        
        if (responseObj.transaction_id){
          // [4] Inform the result to backend update DB status and verify to Midtrans
          fetch('/check_transaction_status', {
            method : "POST",
            body: JSON.stringify({ "transaction_id" : responseObj.transaction_id }),
            headers: {'Content-Type': 'application/json'},
          })
          .then(function(statusResponse) { return statusResponse.json(); } )
          .then(function(statusResponseObj) {
            // Transaction status received after being verified
            console.log("Check transaction response:",statusResponseObj);
            // transactionComplete(statusResponseObj);
            document.getElementById("status-result").innerText = 
              JSON.stringify(statusResponseObj, null, 2);

          })
        }
      }

      // helper functions below
      function openPopup(url) {
        $.featherlight({
          iframe: url, 
          iframeWidth: 700, 
          iframeHeight: 500,
          closeOnClick: true,
          closeOnEsc: false,
          closeIcon:'X'
        });
      }

      function closePopup() {
        $.featherlight.close();
      }
  </script>
</body>
</html>